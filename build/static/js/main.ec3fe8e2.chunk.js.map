{"version":3,"sources":["store/atom.ts","constants/style.ts","components/NavBox/styled.tsx","components/NavBox/index.tsx","components/Header/styled.tsx","components/Header/index.tsx","components/ModalPortal/index.tsx","components/Modal/styled.tsx","components/Modal/index.tsx","constants/map.ts","lib/Map.ts","constants/uri.ts","api/member.ts","api/place.ts","api/keyword.ts","store/selector.ts","components/HomeMap/styled.tsx","components/HomeMap/index.tsx","components/MemberItem/styled.tsx","components/MemberItem/index.tsx","components/MemberBox/styled.tsx","components/MemberBox/index.tsx","components/ButtonBox/styled.tsx","components/ButtonBox/index.tsx","components/RandomMap/styled.tsx","components/RandomMap/index.tsx","components/Anymation/styled.tsx","components/Anymation/index.tsx","pages/Home/styled.tsx","pages/Home/index.tsx","constants/message.ts","components/ListBox/styled.tsx","components/ListBox/index.tsx","components/InputButtonBox/styled.tsx","components/InputButtonBox/index.tsx","components/KeywordItem/styled.tsx","components/KeywordItem/index.tsx","components/KeywordBox/styled.tsx","components/KeywordBox/index.tsx","components/SideButton/styled.tsx","components/SideButton/index.tsx","pages/Member/styled.tsx","pages/Member/index.tsx","components/PlaceListMap/styled.tsx","components/PlaceListMap/index.tsx","pages/Place/styled.tsx","pages/Place/index.tsx","components/Loader/styled.tsx","components/Loader/index.tsx","app/styled.tsx","app/index.tsx","index.js"],"names":["isNavOpenState","atom","key","default","membersQueryState","selectedMemberState","placesQueryState","selectedPlaceState","_id","name","latlng","x","y","filteredPlaceListState","searchKeywordState","keywordsQueryState","selectedKeywordsState","COLOR","FONTSIZE","Container","styled","div","Nav","ul","Menu","li","CloseIcon","NavBox","setIsNavOpen","useSetRecoilState","closeNavHandler","to","onClick","HeaderWrap","MenuIcon","Logo","Header","useRecoilState","isNavOpen","ModalPortal","children","modalRoot","document","getElementById","ReactDOM","createPortal","ModalWrap","Content","Title","h2","Input","input","ErrorMsg","p","ButtonWrap","Button","button","isSubmit","Modal","title","inputRef","contents","isErrorMsg","errorMsg","handleClickSubmitButton","handleClickCloseButton","modalRef","useRef","useEffect","current","addEventListener","target","removeEventListener","ref","MAP","X","Y","zIndex","Map","center","options","$map","zoomControl","infowindow","markers","markerImg","markerSize","markerImage","this","window","kakao","maps","LatLng","level","ZoomControl","InfoWindow","Size","MarkerImage","getBounds","addControl","ControlPosition","TOPLEFT","bounds","setBounds","placeName","marker","setContent","open","position","handleClickTarget","isDisplay","Marker","map","image","event","addListener","displayInfoWindow","push","setMap","URI","getMembers","a","axios","get","res","data","console","log","addMember","member","post","mongoose","Types","ObjectId","profileImage","keywords","deleteMember","id","delete","getPlaces","addPlace","place","deletePlace","getKeywords","addKeyword","deleteKeyword","memberListSelector","selector","selectedMemberListSelector","localMembers","localStorage","getItem","JSON","parse","set","selectedMembers","setItem","stringify","placeListSelector","keywordListSelector","MapContainer","HomeMap","mapRef","useState","placeList","useRecoilValue","filteredPlaceList","setFilteredPlaceList","selectedMembersKeywords","Set","forEach","keyword","add","filter","length","has","setRef","Object","keys","i","clear","displayMarker","AddMember","Member","isSelected","imageUrl","Name","AddMemberItem","handleClickAddMember","MemberItem","selected","handleClickMember","setIsSeleted","MemberWrap","MemberBox","memberList","setSelectedMembers","filteredMembers","setFilteredMembers","isOpenModal","setIsOpenModal","timerRef","selectMemberHandler","unselectMemberHandler","selectedMember","unselectedMembers","focus","onChange","e","clearTimeout","setTimeout","includes","value","searchMemberHandler","find","ButtonBox","buttonText","handleClickButton","RandomMap","LatLngBounds","extend","bang","keyframes","random","range","Math","floor","I","str","createCSS","Animation","Array","from","el","Text","Loading","PlaceName","Home","isLoading","setIsLoading","randomPlace","setRandomPlace","src","alt","MESSAGE","ERROR","EXIST","EMPTY","ListWrap","List","Image","KeywordWrap","Keyword","span","TrashIcon","ListBox","list","handleClickDeleteButton","hasImage","item","index","SearchWrap","SearchInput","SearchButton","InputButtonBox","searchInputRef","KeywordItem","setIsSelected","selectedKeywords","setSelectedKeywords","setAddKeywordQuery","deleteKeywordHandler","success","err","selectKeywordHandler","KeywordBox","keywordList","addKeywordHandler","trim","alert","code","isAddMode","SideButton","Form","Profile","setIsAddMode","nameInputRef","urlInputRef","setMemberQuery","setImageUrl","setIsErrorMsg","addMemberButtonHandler","deleteMemberButtonHandler","test","PlaceListMap","searchKeyword","setSelectedPlace","parseFloat","La","Ma","ps","services","Places","category_group_code","keywordSearch","status","Status","OK","place_name","KewordContainer","Place","selectedPlace","setSearchKeyword","setPlaceQuery","addPlaceButtonHandler","deletePlaceButtonHandler","LoaderWrap","RoundWrap","Round","Loader","NoticeWrap","Notice","App","kakaoMaps","exact","path","fallback","render","StrictMode"],"mappings":"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","file":"static/js/main.ec3fe8e2.chunk.js","sourcesContent":["import { atom } from \"recoil\";\nimport { MemberType, PlaceType, KeywordType } from \"types\";\n\nexport const isNavOpenState = atom({\n    key: \"isNavOpenState\",\n    default: false,\n});\n\nexport const membersQueryState = atom({\n    key: \"membersQueryState\",\n    default: \"\",\n});\n\nexport const selectedMemberState = atom<MemberType[]>({\n    key: \"selectedMemberState\",\n    default: [],\n});\n\nexport const placesQueryState = atom({\n    key: \"placesQueryState\",\n    default: \"\",\n});\n\nexport const selectedPlaceState = atom({\n    key: \"selectedPlaceState\",\n    default: {\n        _id: \"\",\n        name: \"\",\n        latlng: {\n            x: 0,\n            y: 0,\n        },\n    },\n});\n\nexport const filteredPlaceListState = atom<PlaceType[]>({\n    key: \"filteredPlaceListState\",\n    default: [],\n});\n\nexport const searchKeywordState = atom({\n    key: \"searchKeywordState\",\n    default: \"\",\n});\n\nexport const keywordsQueryState = atom({\n    key: \"keywordsQueryState\",\n    default: \"\",\n});\n\nexport const selectedKeywordsState = atom<string[]>({\n    key: \"selectedKeywordsState\",\n    default: [],\n});\n","export const COLOR = {\n    WHITE: \"#fff\",\n    BLACK1: \"#333\",\n    BLACK2: \"#666\",\n    GRAY1: \"#999\",\n    GRAY2: \"#e9e9e9\",\n    GRAY3: \"#d0d0d0\",\n    GRAY4: \"#f7f7f7\",\n    ORANGE1: \"#f15a22\",\n    ORANGE2: \"#f2784b\",\n    YELLOW1: \"#fff9de\",\n};\n\nexport const FONTSIZE = {\n    LARGE: \"18px\",\n    MIDDLE: \"16px\",\n    SMALL: \"14px\",\n};\n","import styled from \"styled-components\";\nimport { COLOR } from \"constants/style\";\n\nexport const Container = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(255, 255, 255, 0.9);\n    z-index: 999;\n`;\n\nexport const Nav = styled.ul`\n    width: 85%;\n    border-top: 1px solid ${COLOR.GRAY2};\n`;\n\nexport const Menu = styled.li`\n    font-size: 17px;\n    color: ${COLOR.BLACK1};\n    text-align: center;\n    padding: 10px 0;\n    border-bottom: 1px solid ${COLOR.GRAY2};\n`;\n\nexport const CloseIcon = styled.li`\n    position: absolute;\n    top: 15px;\n    left: 18px;\n    width: 28px;\n    height: 28px;\n    background-size: 28px 28px;\n    background-image: url(\"/img/pop-close-icon.png\");\n    opacity: 0.7;\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isNavOpenState } from \"store/atom\";\nimport { Container, Nav, Menu, CloseIcon } from \"./styled\";\n\nconst NavBox = () => {\n    const setIsNavOpen = useSetRecoilState(isNavOpenState);\n    const closeNavHandler = () => {\n        setIsNavOpen(false);\n    };\n\n    return (\n        <Container>\n            <Nav>\n                <Menu>\n                    <Link to=\"/member\" onClick={closeNavHandler}>\n                        인간리스트\n                    </Link>\n                </Menu>\n                <Menu>\n                    <Link to=\"/place\" onClick={closeNavHandler}>\n                        밥집리스트\n                    </Link>\n                </Menu>\n            </Nav>\n            <CloseIcon onClick={closeNavHandler} />\n        </Container>\n    );\n};\n\nexport default NavBox;\n","import styled from \"styled-components\";\n\nexport const HeaderWrap = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 55px;\n`;\n\nexport const MenuIcon = styled.div`\n    position: absolute;\n    top: 12px;\n    left: 10px;\n    width: 30px;\n    height: 30px;\n    background-size: 30px 30px;\n    background-image: url(\"/img/menu-icon.png\");\n    opacity: 0.5;\n    cursor: pointer;\n`;\n\nexport const Logo = styled.div`\n    width: 120px;\n    height: 55px;\n    background-image: url(\"/img/r-bob.png\");\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { isNavOpenState } from \"store/atom\";\nimport NavBox from \"components/NavBox\";\nimport { HeaderWrap, MenuIcon, Logo } from \"./styled\";\n\nconst Header = () => {\n    const [isNavOpen, setIsNavOpen] = useRecoilState(isNavOpenState);\n\n    return (\n        <>\n            <HeaderWrap>\n                <MenuIcon onClick={() => setIsNavOpen(!isNavOpen)} />\n                <Link to=\"/\">\n                    <Logo />\n                </Link>\n            </HeaderWrap>\n            {isNavOpen && <NavBox />}\n        </>\n    );\n};\n\nexport default Header;\n","import ReactDOM from \"react-dom\";\n\nconst ModalPortal = ({ children }: { children: JSX.Element }) => {\n    const modalRoot = document.getElementById(\"modal\")!;\n    return ReactDOM.createPortal(children, modalRoot);\n};\n\nexport default ModalPortal;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    z-index: 9990;\n`;\n\nexport const ModalWrap = styled.div`\n    position: relative;\n    width: 85%;\n    max-width: 500px;\n    padding: 15px;\n    background: ${COLOR.WHITE};\n    border: 1px solid ${COLOR.GRAY2};\n    border-radius: 10px;\n    box-shadow: 0 0 10px ${COLOR.GRAY3};\n`;\n\nexport const Content = styled.div`\n    font-size: 14px;\n    color: ${COLOR.BLACK1};\n\n    img {\n        max-width: 100%;\n    }\n`;\n\nexport const Title = styled.h2`\n    font-size: 16px;\n    font-weight: 700;\n    color: ${COLOR.ORANGE2};\n    margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.MIDDLE};\n    padding: 7px 10px;\n    border: 1px solid ${COLOR.GRAY1};\n    border-radius: 5px;\n    outline: none;\n`;\n\nexport const ErrorMsg = styled.p`\n    font-size: 12px;\n    color: ${COLOR.ORANGE1};\n    margin-top: 5px;\n`;\n\nexport const ButtonWrap = styled.div`\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    color: ${COLOR.BLACK1};\n    margin-top: 15px;\n`;\n\nexport const Button = styled.button`\n    min-width: 60px;\n    height: 35px;\n    font-size: 13px;\n    color: ${COLOR.WHITE};\n    background: ${COLOR.GRAY1};\n    border-radius: 5px;\n    padding: 5px;\n    margin: 0 3px;\n    cursor: pointer;\n\n    ${({ isSubmit }: { isSubmit?: boolean }) => isSubmit && `background: ${COLOR.ORANGE2}`}\n`;\n","import React, { useRef, useEffect } from \"react\";\nimport { Container, ModalWrap, Content, Title, Input, ErrorMsg, ButtonWrap, Button } from \"./styled\";\n\nconst Modal = ({\n    title,\n    inputRef,\n    contents,\n    isErrorMsg,\n    errorMsg,\n    handleClickSubmitButton,\n    handleClickCloseButton,\n}: {\n    title?: string;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    contents?: JSX.Element;\n    isErrorMsg?: boolean;\n    errorMsg?: string;\n    handleClickSubmitButton?: () => void;\n    handleClickCloseButton: () => void;\n}) => {\n    const modalRef = useRef(null);\n\n    useEffect(() => {\n        if (!modalRef.current) return;\n        document.addEventListener(\"click\", function ({ target }) {\n            if (target === modalRef.current) handleClickCloseButton();\n        });\n        return () => {\n            document.removeEventListener(\"click\", function ({ target }) {\n                if (target === modalRef.current) handleClickCloseButton();\n            });\n        };\n    }, [modalRef]);\n\n    return (\n        <Container ref={modalRef}>\n            <ModalWrap>\n                <Content>\n                    {title && <Title>{title}</Title>}\n                    {inputRef && <Input ref={inputRef} />}\n                    {contents && contents}\n                    {isErrorMsg && <ErrorMsg>{errorMsg}</ErrorMsg>}\n                </Content>\n                <ButtonWrap>\n                    {handleClickSubmitButton && (\n                        <Button isSubmit={true} onClick={handleClickSubmitButton}>\n                            확인\n                        </Button>\n                    )}\n                    <Button onClick={handleClickCloseButton}>닫기</Button>\n                </ButtonWrap>\n            </ModalWrap>\n        </Container>\n    );\n};\n\nexport default Modal;\n","export const MAP = {\n  CENTER: {\n    X: 127.10948520255701,\n    Y: 37.5137785733876,\n  },\n  INFO_WINDOW_STYLE: { zIndex: 1 },\n  MARKER_IMG:\n    \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\",\n  MARKER_SIZE: [24, 35],\n};\n","/* eslint-disable no-undef */\nimport { MAP } from \"constants/map\";\n\nexport default class Map {\n    private center: { LatLng: number; longitude: number };\n    private options: { center: { LatLng: number; longitude: number }; level: number };\n    private $map: Window[\"kakao\"];\n    private zoomControl: any;\n    private infowindow: any;\n    private markers: any[];\n    private markerImg: string;\n    private markerSize: any;\n    private markerImage: any;\n\n    constructor() {\n        this.center = new window.kakao.maps.LatLng(MAP.CENTER.Y, MAP.CENTER.X);\n        this.options = {\n            center: this.center,\n            level: 6,\n        };\n        this.$map = {};\n        this.zoomControl = new window.kakao.maps.ZoomControl();\n        this.infowindow = new window.kakao.maps.InfoWindow(MAP.INFO_WINDOW_STYLE);\n        this.markers = [];\n        this.markerImg = MAP.MARKER_IMG;\n        this.markerSize = new window.kakao.maps.Size(...MAP.MARKER_SIZE);\n        this.markerImage = new window.kakao.maps.MarkerImage(this.markerImg, this.markerSize);\n    }\n\n    get bounds() {\n        return this.$map.getBounds();\n    }\n\n    setRef(ref: HTMLElement) {\n        this.$map = new window.kakao.maps.Map(ref, this.options);\n        this.$map.addControl(this.zoomControl, window.kakao.maps.ControlPosition.TOPLEFT);\n    }\n\n    setBounds(bounds: any) {\n        this.$map.setBounds(bounds);\n    }\n\n    displayInfoWindow({ placeName, marker }: { placeName: string; marker: any }) {\n        this.infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + placeName + \"</div>\");\n        this.infowindow.open(this.$map, marker);\n    }\n\n    displayMarker({\n        _id,\n        placeName,\n        position,\n        handleClickTarget,\n        isDisplay,\n    }: {\n        _id: string;\n        placeName: string;\n        position: any;\n        handleClickTarget?: ({ _id, placeName, position }: { _id: string; placeName: string; position: any }) => void;\n        isDisplay?: boolean;\n    }) {\n        const marker = new window.kakao.maps.Marker({\n            map: this.$map,\n            position: position,\n            title: placeName,\n            image: this.markerImage,\n        });\n\n        window.kakao.maps.event.addListener(marker, \"click\", () => {\n            this.displayInfoWindow({ placeName, marker });\n            if (handleClickTarget) handleClickTarget({ _id, placeName, position });\n        });\n\n        if (isDisplay) {\n            if (handleClickTarget) handleClickTarget({ _id, placeName, position });\n            this.displayInfoWindow({ placeName, marker });\n        }\n\n        this.markers.push(marker);\n    }\n\n    clear() {\n        for (const marker of this.markers) {\n            marker.setMap(null);\n        }\n        this.markers = [];\n    }\n}\n","export const URI = {\n    MEMBERS: \"/api/members\",\n    PLACES: \"/api/places\",\n    KEYWORDS: \"/api/keywords\",\n};\n","import axios from \"axios\";\nimport mongoose from \"mongoose\";\nimport { MemberType } from \"types\";\nimport { URI } from \"constants/uri\";\n\nexport const getMembers = async () => {\n    try {\n        const res = await axios.get(URI.MEMBERS);\n        return res.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const addMember = async (member: MemberType) => {\n    try {\n        const { data } = await axios.post(URI.MEMBERS, {\n            _id: new mongoose.Types.ObjectId(),\n            profileImage: member.profileImage,\n            name: member.name,\n            keywords: member.keywords,\n        });\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const deleteMember = async (id: string) => {\n    try {\n        const { data } = await axios.delete(`${URI.MEMBERS}/${id}`);\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n","import axios from \"axios\";\nimport mongoose from \"mongoose\";\nimport { PlaceType } from \"types\";\nimport { URI } from \"constants/uri\";\n\nexport const getPlaces = async () => {\n    try {\n        const res = await axios.get(URI.PLACES);\n        return res.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const addPlace = async (place: PlaceType) => {\n    try {\n        const { data } = await axios.post(URI.PLACES, {\n            _id: place._id,\n            name: place.name,\n            latlng: place.latlng,\n            keywords: place.keywords,\n        });\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const deletePlace = async (id: string) => {\n    try {\n        const { data } = await axios.delete(`${URI.PLACES}/${id}`);\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n","import axios from \"axios\";\nimport mongoose from \"mongoose\";\nimport { URI } from \"constants/uri\";\n\nexport const getKeywords = async () => {\n    try {\n        const { data } = await axios.get(URI.KEYWORDS);\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const addKeyword = async (title: string) => {\n    try {\n        const { data } = await axios.post(URI.KEYWORDS, {\n            _id: new mongoose.Types.ObjectId(),\n            title: title,\n        });\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const deleteKeyword = async (id: string) => {\n    try {\n        const { data } = await axios.delete(`${URI.KEYWORDS}/${id}`);\n        return data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n","import { selector } from \"recoil\";\nimport { membersQueryState, selectedMemberState, placesQueryState, keywordsQueryState } from \"./atom\";\nimport { MemberType, PlaceType } from \"types\";\nimport { getMembers } from \"api/member\";\nimport { getPlaces } from \"api/place\";\nimport { getKeywords } from \"api/keyword\";\n\nexport const memberListSelector = selector({\n    key: \"memberListSelector\",\n    get: async ({ get }) => {\n        get(membersQueryState);\n        return await getMembers();\n    },\n});\n\nexport const selectedMemberListSelector = selector<MemberType[]>({\n    key: \"selectedMemberListSelector\",\n    get: ({ get }) => {\n        get(selectedMemberState);\n        const localMembers = localStorage.getItem(\"selectedMembers\");\n        return localMembers ? JSON.parse(localMembers) : [];\n    },\n    set: ({ set }, selectedMembers) => {\n        set(selectedMemberState, selectedMembers);\n        localStorage.setItem(\"selectedMembers\", JSON.stringify(selectedMembers));\n    },\n});\n\nexport const placeListSelector = selector({\n    key: \"placeListSelector\",\n    get: async ({ get }) => {\n        get(placesQueryState);\n        return await getPlaces();\n    },\n});\n\nexport const keywordListSelector = selector({\n    key: \"keywordListSelector\",\n    get: async ({ get }) => {\n        get(keywordsQueryState);\n        return await getKeywords();\n    },\n});\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n","/* eslint-disable no-undef */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { MemberType, PlaceType } from \"types\";\nimport Map from \"lib/Map\";\nimport { filteredPlaceListState } from \"store/atom\";\nimport { placeListSelector, selectedMemberListSelector } from \"store/selector\";\nimport { MapContainer } from \"./styled\";\n\nconst HomeMap = () => {\n    const mapRef = useRef(null);\n    const [map, setMap] = useState(new Map());\n    const placeList = useRecoilValue(placeListSelector);\n    const selectedMembers = useRecoilValue(selectedMemberListSelector);\n    const [filteredPlaceList, setFilteredPlaceList] = useRecoilState(filteredPlaceListState);\n\n    useEffect(() => {\n        const selectedMembersKeywords = new Set();\n        selectedMembers.map((member: MemberType) =>\n            member.keywords.forEach((keyword: string) => selectedMembersKeywords.add(keyword))\n        );\n        setFilteredPlaceList(\n            placeList.filter((place: PlaceType) => {\n                if (place.keywords.length > 0) {\n                    for (const keyword of place.keywords) {\n                        if (!selectedMembersKeywords.has(keyword)) {\n                            return true;\n                        }\n                    }\n                } else {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }, [selectedMembers]);\n\n    useEffect(() => {\n        if (!mapRef.current) return;\n        map.setRef(mapRef.current!);\n    }, [mapRef]);\n\n    useEffect(() => {\n        if (Object.keys(map).length === 0 || !(filteredPlaceList.length > 0)) return;\n        map.clear();\n        for (const i in filteredPlaceList) {\n            const position = new window.kakao.maps.LatLng(filteredPlaceList[i].latlng.y, filteredPlaceList[i].latlng.x);\n            map.displayMarker({\n                _id: filteredPlaceList[i]._id,\n                placeName: filteredPlaceList[i].name,\n                position,\n            });\n        }\n    }, [map, filteredPlaceList]);\n\n    return <MapContainer ref={mapRef} />;\n};\n\nexport default HomeMap;\n","import styled from \"styled-components\";\nimport { COLOR } from \"constants/style\";\n\ntype MemberProps = {\n    isSelected: boolean;\n    imageUrl: string;\n};\n\nexport const AddMember = styled.div`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: center / 25px url(\"/img/add-icon.png\") no-repeat, ${COLOR.GRAY2};\n    margin-right: 5px;\n    cursor: pointer;\n`;\n\nexport const Member = styled.div<MemberProps>`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${({ isSelected }) => (isSelected ? `${COLOR.ORANGE1}` : `${COLOR.WHITE}`)};\n    border-radius: 25px;\n    background: center / ${({ imageUrl }) => (imageUrl ? `50px url(${imageUrl})` : `30px url(\"/img/user-icon.png\")`)}\n            no-repeat,\n        ${COLOR.GRAY2};\n    margin-right: 3px;\n    cursor: pointer;\n`;\n\nexport const Name = styled.p`\n    max-width: 80%;\n    font-size: 12px;\n    color: ${COLOR.WHITE};\n    text-align: center;\n    text-shadow: 0 0 4px rgba(0, 0, 0, 0.7);\n    padding: 2px;\n    overflow: hidden;\n    line-height: 13px;\n    max-height: 30px;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n`;\n","import React, { useState } from \"react\";\nimport { AddMember, Member, Name } from \"./styled\";\n\nexport const AddMemberItem = ({ handleClickAddMember }: { handleClickAddMember: () => void }) => {\n    return <AddMember onClick={handleClickAddMember} />;\n};\n\nexport const MemberItem = ({\n    profileImage,\n    name,\n    selected = false,\n    handleClickMember,\n}: {\n    profileImage: string;\n    name: string;\n    selected?: boolean;\n    handleClickMember: ({\n        setIsSeleted,\n        isSelected,\n        name,\n    }: {\n        setIsSeleted: (isSelcted: boolean) => void;\n        isSelected: boolean;\n        name: string;\n    }) => void;\n}) => {\n    const [isSelected, setIsSeleted] = useState(selected);\n\n    return (\n        <Member\n            isSelected={isSelected}\n            imageUrl={profileImage}\n            onClick={() => handleClickMember({ setIsSeleted, isSelected, name })}\n        >\n            <Name>{name}</Name>\n        </Member>\n    );\n};\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    background: ${COLOR.WHITE};\n    margin: 10px 0;\n    z-index: 99;\n`;\n\nexport const MemberWrap = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.MIDDLE};\n    padding: 7px 10px;\n    border: 1px solid ${COLOR.GRAY1};\n    border-radius: 5px;\n    margin-bottom: 10px;\n    outline: none;\n`;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { memberListSelector, selectedMemberListSelector } from \"store/selector\";\nimport { MemberType } from \"types\";\nimport { AddMemberItem, MemberItem } from \"components/MemberItem\";\nimport ModalPortal from \"components/ModalPortal\";\nimport Modal from \"components/Modal\";\nimport { Container, MemberWrap, Input } from \"./styled\";\n\nconst MemberBox = () => {\n    const memberList = useRecoilValue(memberListSelector);\n    const [selectedMembers, setSelectedMembers] = useRecoilState(selectedMemberListSelector);\n    const [filteredMembers, setFilteredMembers] = useState(memberList);\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const timerRef: { current: NodeJS.Timeout | null } = useRef(null);\n\n    const searchMemberHandler = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n        if (timerRef.current) clearTimeout(timerRef.current);\n        timerRef.current = setTimeout(() => {\n            setFilteredMembers(memberList.filter((member: MemberType) => member.name.includes(target?.value)));\n        }, 300);\n    };\n\n    const selectMemberHandler = ({\n        setIsSeleted,\n        isSelected,\n        name,\n    }: {\n        setIsSeleted: (isSelcted: boolean) => void;\n        isSelected: boolean;\n        name: string;\n    }) => {\n        setIsSeleted(!isSelected);\n        if (!isSelected) {\n            const selectedMember = memberList.filter((member: MemberType) => member.name === name);\n            setSelectedMembers([...selectedMembers, ...selectedMember]);\n        } else {\n            unselectMemberHandler({ name });\n        }\n    };\n\n    const unselectMemberHandler = ({ name }: { name: string }) => {\n        const unselectedMembers = selectedMembers.filter((member) => member.name !== name);\n        setSelectedMembers([...unselectedMembers]);\n    };\n\n    useEffect(() => {\n        if (isOpenModal && inputRef.current) inputRef.current!.focus();\n        if (!isOpenModal) setFilteredMembers(memberList);\n    }, [isOpenModal]);\n\n    return (\n        <>\n            <Container>\n                <MemberWrap>\n                    <AddMemberItem handleClickAddMember={() => setIsOpenModal(true)} />\n                    {selectedMembers.length > 0 &&\n                        selectedMembers.map((member) => {\n                            return (\n                                <MemberItem\n                                    key={member._id}\n                                    profileImage={member.profileImage}\n                                    name={member.name}\n                                    handleClickMember={unselectMemberHandler}\n                                />\n                            );\n                        })}\n                </MemberWrap>\n            </Container>\n            {isOpenModal && (\n                <ModalPortal>\n                    <Modal\n                        title=\"같이 밥먹을 파티원 추가\"\n                        contents={\n                            <>\n                                <Input ref={inputRef} onChange={(e) => searchMemberHandler(e)} />\n                                <MemberWrap>\n                                    {filteredMembers.length > 0 &&\n                                        filteredMembers.map((member: MemberType) => {\n                                            return (\n                                                <MemberItem\n                                                    key={member._id}\n                                                    profileImage={member.profileImage}\n                                                    name={member.name}\n                                                    selected={\n                                                        !!selectedMembers.find(\n                                                            (selectedMember) => selectedMember.name === member.name\n                                                        )\n                                                    }\n                                                    handleClickMember={selectMemberHandler}\n                                                />\n                                            );\n                                        })}\n                                </MemberWrap>\n                            </>\n                        }\n                        handleClickCloseButton={() => setIsOpenModal(false)}\n                    />\n                </ModalPortal>\n            )}\n        </>\n    );\n};\n\nexport default MemberBox;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const ButtonWrap = styled.div`\n    margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n    width: 100%;\n    height: 45px;\n    font-size: ${FONTSIZE.LARGE};\n    color: ${COLOR.WHITE};\n    background: ${COLOR.ORANGE1};\n    border: 0;\n    border-radius: 5px;\n    outline: none;\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport { ButtonWrap, Button } from \"./styled\";\n\ntype Props = {\n    buttonText: string;\n    handleClickButton: () => void;\n};\n\nconst ButtonBox = ({ buttonText, handleClickButton }: Props) => {\n    return (\n        <ButtonWrap>\n            <Button onClick={() => handleClickButton()}>{buttonText}</Button>\n        </ButtonWrap>\n    );\n};\n\nexport default ButtonBox;\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n    width: 100%;\n    height: 200px;\n    margin: 10px 0 15px;\n`;\n","/* eslint-disable no-undef */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Map from \"lib/Map\";\nimport { PlaceType } from \"types\";\nimport { MapContainer } from \"./styled\";\n\nconst RandomMap = ({ place }: { place: PlaceType }) => {\n    const mapRef = useRef(null);\n    const [map, setMap] = useState(new Map());\n\n    useEffect(() => {\n        if (!mapRef.current) return;\n        map.setRef(mapRef.current!);\n    }, [mapRef]);\n\n    useEffect(() => {\n        if (Object.keys(map).length === 0 || !place) return;\n        const position = new window.kakao.maps.LatLng(place.latlng.y, place.latlng.x);\n        const bounds = new window.kakao.maps.LatLngBounds();\n        bounds.extend(position);\n        map.displayMarker({\n            _id: place._id,\n            placeName: place.name,\n            position,\n        });\n        map.setBounds(bounds);\n    }, [map, place]);\n\n    return <MapContainer ref={mapRef} />;\n};\n\nexport default RandomMap;\n","import styled, { keyframes } from \"styled-components\";\n\nconst bang = keyframes`\n    from {\n        transform: translate3d(0, 0, 0);\n        opacity: 1;\n    }\n`;\n\nconst random = (range: number) => {\n    return Math.floor(Math.random() * range);\n};\n\nexport const I = styled.i`\n    position: absolute;\n    display: block;\n    left: 50%;\n    top: 0;\n    width: 5px;\n    height: 10px;\n    background: red;\n    opacity: 0;\n`;\n\nconst createCSS = () => {\n    let str = \"\";\n    for (let i = 1; i <= 30; i++) {\n        str += `\n            &:nth-of-type(${i}) {\n                transform: translate3d(${random(190) - 100}px, ${random(200) - 100}px, 0) rotate(${random(360)}deg);\n                background: hsla(${random(360)}, 100%, 50%, 1);\n            }\n        `;\n    }\n    return str;\n};\n\nexport const Container = styled.div`\n    ${I} {\n        ${createCSS()}\n        animation: ${bang} 700ms ease-out forwards;\n    }\n`;\n","import React from \"react\";\nimport { Container, I } from \"./styled\";\n\nconst Animation = () => {\n    return (\n        <Container>\n            {Array.from(Array(30).keys()).map((el, i) => {\n                return <I key={i} />;\n            })}\n        </Container>\n    );\n};\n\nexport default Animation;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const Text = styled.p`\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.SMALL};\n    text-align: center;\n`;\n\nexport const Loading = styled.div`\n    margin-bottom: 20px;\n\n    ${Text} {\n        color: ${COLOR.ORANGE1};\n        font-size: ${FONTSIZE.MIDDLE};\n        font-weight: 700;\n    }\n`;\n\nexport const PlaceName = styled.p`\n    color: ${COLOR.ORANGE1};\n    font-size: ${FONTSIZE.LARGE};\n    font-weight: 700;\n    text-align: center;\n\n    &:before {\n        content: \"[\";\n        display: inline-block;\n        margin-right: 5px;\n    }\n\n    &:after {\n        content: \"]\";\n        display: inline-block;\n        margin-left: 5px;\n    }\n`;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { filteredPlaceListState } from \"store/atom\";\nimport { PlaceType } from \"types\";\nimport ModalPortal from \"components/ModalPortal\";\nimport Modal from \"components/Modal\";\nimport HomeMap from \"components/HomeMap\";\nimport MemberBox from \"components/MemberBox\";\nimport ButtonBox from \"components/ButtonBox\";\nimport RandomMap from \"components/RandomMap\";\nimport Animation from \"components/Anymation\";\nimport { Loading, Text, PlaceName } from \"./styled\";\n\nconst Home = () => {\n    const timerRef: { current: NodeJS.Timeout | null } = useRef(null);\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const filteredPlaceList = useRecoilValue(filteredPlaceListState);\n    const [randomPlace, setRandomPlace] = useState({} as PlaceType);\n\n    useEffect(() => {\n        if (!isOpenModal) return;\n        if (timerRef.current) clearTimeout(timerRef.current);\n        timerRef.current = setTimeout(() => {\n            setRandomPlace(filteredPlaceList[Math.floor(Math.random() * filteredPlaceList.length)]);\n            setIsLoading(false);\n        }, 4000);\n    }, [isOpenModal]);\n\n    return (\n        <>\n            <MemberBox />\n            <HomeMap />\n            <ButtonBox buttonText=\"랜덤 메뉴\" handleClickButton={() => setIsOpenModal(true)} />\n            {isOpenModal && (\n                <ModalPortal>\n                    <Modal\n                        contents={\n                            isLoading ? (\n                                <Loading>\n                                    <img src=\"/img/random-loading.gif\" alt=\"loading\" />\n                                    <Text>랜덤 메뉴를 고르는 중입니다..</Text>\n                                </Loading>\n                            ) : (\n                                <>\n                                    <PlaceName>{randomPlace.name}</PlaceName>\n                                    <RandomMap place={randomPlace} />\n                                    <Text>여기로 고고!</Text>\n                                    <Animation />\n                                </>\n                            )\n                        }\n                        handleClickCloseButton={() => {\n                            setIsOpenModal(false);\n                            setIsLoading(true);\n                        }}\n                    />\n                </ModalPortal>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","export const MESSAGE = {\n    MEMBERS: {\n        ERROR: {\n            EXIST: \"이미 등록된 녀석입니다.\",\n            EMPTY: \"이름을 1글자 이상 입력해주세요.\",\n        },\n    },\n    PLACES: {\n        ERROR: {\n            EXIST: \"이미 등록된 음식점입니다.\",\n            EMPTY: \"음식점을 선택해주세요.\",\n        },\n    },\n    KEYWORDS: {\n        ERROR: {\n            EXIST: \"이미 등록된 키워드입니다.\",\n            EMPTY: \"키워드를 1글자 이상 입력해주세요.\",\n        },\n    },\n};\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const ListWrap = styled.div``;\n\nexport const List = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    min-height: 50px;\n    padding: 10px;\n    border-bottom: 1px solid ${COLOR.GRAY2};\n`;\n\nexport const Image = styled.div`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: center /\n            ${({ imageUrl }: { imageUrl: string }) =>\n                imageUrl ? `50px url(${imageUrl})` : `30px url(\"/img/user-icon.png\")`}\n            no-repeat,\n        ${COLOR.GRAY2};\n    margin-right: 10px;\n`;\n\nexport const Title = styled.div`\n    color: ${COLOR.BLACK1};\n    font-size: ${FONTSIZE.MIDDLE};\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.SMALL};\n`;\n\nexport const KeywordWrap = styled.div`\n    margin-top: 3px;\n`;\n\nexport const Keyword = styled.span`\n    color: ${COLOR.GRAY1};\n    font-size: ${FONTSIZE.SMALL};\n    margin-right: 5px;\n`;\n\nexport const TrashIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    width: 16px;\n    height: 16px;\n    margin-top: -8px;\n    background-size: 16px 16px;\n    background-image: url(\"/img/trash-icon.png\");\n    opacity: 0.5;\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport { KeywordType } from \"types\";\nimport { ListWrap, List, Image, Title, Content, KeywordWrap, Keyword, TrashIcon } from \"./styled\";\n\nconst ListBox = ({\n    list,\n    handleClickDeleteButton,\n    hasImage,\n}: {\n    list: any[];\n    handleClickDeleteButton: (id: string) => void;\n    hasImage?: boolean;\n}) => {\n    return (\n        <ListWrap>\n            {list &&\n                list.map((item) => {\n                    return (\n                        <List key={item._id}>\n                            {hasImage && <Image imageUrl={item.profileImage} />}\n                            <Content>\n                                <Title>{item.name}</Title>\n                                {item.keywords && (\n                                    <KeywordWrap>\n                                        {item.keywords.map((keyword: KeywordType, index: number) => {\n                                            return <Keyword key={`${item._id}_${index}`}>{keyword}</Keyword>;\n                                        })}\n                                    </KeywordWrap>\n                                )}\n                            </Content>\n                            <TrashIcon onClick={() => handleClickDeleteButton(item._id)} />\n                        </List>\n                    );\n                })}\n        </ListWrap>\n    );\n};\n\nexport default ListBox;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const SearchWrap = styled.div`\n    display: flex;\n    height: 40px;\n    margin-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n    width: 100%;\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.LARGE};\n    padding: 7px 10px;\n    border: 1px solid ${COLOR.GRAY1};\n    border-radius: 5px;\n    outline: none;\n`;\n\nexport const SearchButton = styled.button`\n    flex: 1 0 52px;\n    color: ${COLOR.WHITE};\n    font-size: ${FONTSIZE.SMALL};\n    background: ${COLOR.ORANGE2};\n    border-radius: 5px;\n    margin-left: 5px;\n    border: 0;\n    outline: none;\n    cursor: pointer;\n`;\n","import React, { useRef, useEffect } from \"react\";\nimport { SearchWrap, SearchInput, SearchButton } from \"./styled\";\n\nconst InputButtonBox = ({\n    buttonText,\n    handleClickButton,\n    focus,\n}: {\n    buttonText: string;\n    handleClickButton: (value: string) => void;\n    focus?: boolean;\n}) => {\n    const searchInputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (!searchInputRef.current || !focus) return;\n        searchInputRef.current.focus();\n    }, [searchInputRef]);\n\n    return (\n        <SearchWrap>\n            <SearchInput ref={searchInputRef} />\n            <SearchButton\n                onClick={() => {\n                    handleClickButton(searchInputRef.current!.value);\n                    searchInputRef.current!.value = \"\";\n                }}\n            >\n                {buttonText}\n            </SearchButton>\n        </SearchWrap>\n    );\n};\n\nexport default InputButtonBox;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const Keyword = styled.span`\n    display: flex;\n    align-items: center;\n    height: 30px;\n    line-height: 1.7;\n    color: ${({ isSelected }: { isSelected: boolean }) => (isSelected ? COLOR.ORANGE1 : COLOR.ORANGE2)};\n    border: 1px solid ${({ isSelected }: { isSelected: boolean }) => (isSelected ? COLOR.ORANGE1 : COLOR.GRAY2)};\n    border-radius: 5px;\n    background: ${COLOR.WHITE};\n    padding-right: 6px;\n    margin-right: 5px;\n    margin-bottom: 5px;\n    cursor: pointer;\n`;\n\nexport const Text = styled.span`\n    font-size: ${FONTSIZE.SMALL};\n    padding: 3px 6px;\n`;\n\nexport const TrashIcon = styled.span`\n    width: 8px;\n    height: 8px;\n    background-size: 8px 8px;\n    background-image: url(\"/img/keyword-delete-icon.png\");\n`;\n","import React, { useState } from \"react\";\nimport mongoose from \"mongoose\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { selectedKeywordsState, keywordsQueryState } from \"store/atom\";\nimport { deleteKeyword } from \"api/keyword\";\nimport { Keyword, Text, TrashIcon } from \"./styled\";\n\nconst KeywordItem = ({ id, title }: { id: string; title: string }) => {\n    const [isSelected, setIsSelected] = useState(false);\n    const [selectedKeywords, setSelectedKeywords] = useRecoilState(selectedKeywordsState);\n    const setAddKeywordQuery = useSetRecoilState(keywordsQueryState);\n\n    const selectKeywordHandler = (title: string) => {\n        setIsSelected(!isSelected);\n        setSelectedKeywords([...selectedKeywords, title]);\n    };\n\n    const deleteKeywordHandler = async () => {\n        const { success, err } = await deleteKeyword(id);\n        if (success) setAddKeywordQuery(title);\n    };\n\n    return (\n        <Keyword isSelected={isSelected}>\n            <Text onClick={() => selectKeywordHandler(title)}>{title}</Text>\n            <TrashIcon onClick={() => deleteKeywordHandler()} />\n        </Keyword>\n    );\n};\n\nexport default KeywordItem;\n","import styled from \"styled-components\";\nimport { COLOR } from \"constants/style\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    background: ${COLOR.WHITE};\n    z-index: 99;\n`;\n\nexport const KeywordWrap = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { keywordsQueryState } from \"store/atom\";\nimport { keywordListSelector } from \"store/selector\";\nimport { KeywordType } from \"types\";\nimport { addKeyword } from \"api/keyword\";\nimport { MESSAGE } from \"constants/message\";\nimport InputButtonBox from \"components/InputButtonBox\";\nimport KeywordItem from \"components/KeywordItem\";\nimport { Container, KeywordWrap } from \"./styled\";\n\nconst KeywordBox = () => {\n    const keywordList = useRecoilValue(keywordListSelector);\n    const setAddKeywordQuery = useSetRecoilState(keywordsQueryState);\n\n    const addKeywordHandler = async (value: string) => {\n        const title = value.trim();\n        if (!(title.length > 0)) return alert(MESSAGE.KEYWORDS.ERROR.EMPTY);\n        const { success, err } = await addKeyword(title);\n        if (!success) {\n            switch (err.code) {\n                case 11000:\n                    alert(MESSAGE.KEYWORDS.ERROR.EXIST);\n                    break;\n            }\n        } else {\n            setAddKeywordQuery(title);\n        }\n    };\n\n    return (\n        <Container>\n            <InputButtonBox buttonText=\"추가\" handleClickButton={addKeywordHandler} focus={false} />\n            <KeywordWrap>\n                {keywordList &&\n                    keywordList.map((keyword: KeywordType) => {\n                        return <KeywordItem key={keyword._id} id={keyword._id} title={keyword.title} />;\n                    })}\n            </KeywordWrap>\n        </Container>\n    );\n};\n\nexport default KeywordBox;\n","import styled from \"styled-components\";\nimport { COLOR } from \"constants/style\";\n\nexport const Button = styled.div`\n    position: fixed;\n    bottom: 65px;\n    right: 15px;\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: ${COLOR.ORANGE1};\n    background-size: 20px 20px;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: ${({ isAddMode }: { isAddMode: boolean }) =>\n        isAddMode ? `url(\"/img/list-icon.png\");` : `url(\"/img/add-icon.png\");`};\n    z-index: 9;\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport { Button } from \"./styled\";\n\nconst SideButton = ({ isAddMode, handleClickButton }: { isAddMode: boolean; handleClickButton: () => void }) => {\n    return <Button isAddMode={isAddMode} onClick={() => handleClickButton()} />;\n};\n\nexport default SideButton;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const Container = styled.div`\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nexport const Form = styled.ul``;\nexport const List = styled.li`\n    margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n    font-size: 16px;\n    font-weight: 700;\n    color: ${COLOR.ORANGE2};\n    margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    color: ${COLOR.BLACK2};\n    font-size: ${FONTSIZE.LARGE};\n    padding: 7px 10px;\n    border: 1px solid ${COLOR.GRAY1};\n    border-radius: 5px;\n    outline: none;\n`;\n\nexport const Profile = styled.div`\n    width: 70px;\n    height: 70px;\n    border-radius: 35px;\n    background: center /\n            ${({ imageUrl }: { imageUrl: string }) =>\n                imageUrl ? `70px url(${imageUrl})` : `40px url(\"/img/user-icon.png\")`}\n            no-repeat,\n        ${COLOR.GRAY2};\n    cursor: pointer;\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedKeywordsState, membersQueryState } from \"store/atom\";\nimport { memberListSelector } from \"store/selector\";\nimport { addMember, deleteMember } from \"api/member\";\nimport { MESSAGE } from \"constants/message\";\nimport ListBox from \"components/ListBox\";\nimport ButtonBox from \"components/ButtonBox\";\nimport KeywordBox from \"components/KeywordBox\";\nimport SideButton from \"components/SideButton\";\nimport ModalPortal from \"components/ModalPortal\";\nimport Modal from \"components/Modal\";\nimport { Container, Form, List, Title, Input, Profile } from \"./styled\";\n\nconst Member = () => {\n    const [isAddMode, setIsAddMode] = useState(false);\n    const [selectedKeywords, setSelectedKeywords] = useRecoilState(selectedKeywordsState);\n    const nameInputRef = useRef<HTMLInputElement>(null);\n    const urlInputRef = useRef<HTMLInputElement>(null);\n    const memberList = useRecoilValue(memberListSelector);\n    const setMemberQuery = useSetRecoilState(membersQueryState);\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [isErrorMsg, setIsErrorMsg] = useState(false);\n\n    const addProfileImage = () => {\n        const urlMatch = /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.)+[a-z0-9]{2,4}(.*?)\\.((jpe?|pn)g|gif)/gi.test(\n            urlInputRef.current!.value\n        );\n        if (urlMatch) {\n            setImageUrl(urlInputRef.current!.value);\n            setIsOpenModal(false);\n        } else {\n            setIsErrorMsg(true);\n        }\n    };\n\n    const addMemberButtonHandler = async () => {\n        const name = nameInputRef.current!.value.trim();\n        if (!(name.length > 0)) return alert(MESSAGE.MEMBERS.ERROR.EMPTY);\n        const { success, err } = await addMember({ profileImage: imageUrl, name, keywords: selectedKeywords });\n        if (!success) {\n            switch (err.code) {\n                case 11000:\n                    alert(MESSAGE.MEMBERS.ERROR.EXIST);\n                    break;\n            }\n        } else {\n            setMemberQuery(name);\n            setIsAddMode(false);\n        }\n    };\n\n    const deleteMemberButtonHandler = async (id: string) => {\n        const { success, err } = await deleteMember(id);\n        if (success) setMemberQuery(id);\n    };\n\n    useEffect(() => {\n        if (isAddMode) {\n            if (nameInputRef.current) nameInputRef.current.focus();\n        } else {\n            setImageUrl(\"\");\n            setSelectedKeywords([]);\n        }\n    }, [isAddMode]);\n\n    useEffect(() => {\n        if (isOpenModal && urlInputRef.current) urlInputRef.current.focus();\n        if (!isOpenModal) setIsErrorMsg(false);\n    }, [isOpenModal]);\n\n    return (\n        <>\n            {isAddMode ? (\n                <Container>\n                    <Form>\n                        <List>\n                            <Title>프로필 사진</Title>\n                            <Profile imageUrl={imageUrl} onClick={() => setIsOpenModal(true)} />\n                        </List>\n                        <List>\n                            <Title>이름</Title>\n                            <Input ref={nameInputRef} />\n                        </List>\n                        <List>\n                            <Title>못 먹는 음식</Title>\n                            <KeywordBox />\n                        </List>\n                    </Form>\n                    <ButtonBox buttonText=\"멤버 추가\" handleClickButton={addMemberButtonHandler} />\n                </Container>\n            ) : (\n                <ListBox list={memberList} handleClickDeleteButton={deleteMemberButtonHandler} hasImage={true} />\n            )}\n            <SideButton isAddMode={isAddMode} handleClickButton={() => setIsAddMode(!isAddMode)} />\n            {isOpenModal && (\n                <ModalPortal>\n                    <Modal\n                        title=\"이미지 URL\"\n                        inputRef={urlInputRef}\n                        isErrorMsg={isErrorMsg}\n                        errorMsg=\"URL 형식을 확인해주세요.\"\n                        handleClickSubmitButton={() => addProfileImage()}\n                        handleClickCloseButton={() => setIsOpenModal(false)}\n                    />\n                </ModalPortal>\n            )}\n        </>\n    );\n};\n\nexport default Member;\n","import styled from \"styled-components\";\n\nexport const MapContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n","/* eslint-disable no-undef */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport Map from \"lib/Map\";\nimport { searchKeywordState, selectedPlaceState } from \"store/atom\";\nimport { MapContainer } from \"./styled\";\n\nconst PlaceListMap = () => {\n    const mapRef = useRef(null);\n    const [map, setMap] = useState(new Map());\n    const searchKeyword = useRecoilValue(searchKeywordState);\n    const setSelectedPlace = useSetRecoilState(selectedPlaceState);\n\n    const handleClickTarget = ({ _id, placeName, position }: { _id: string; placeName: string; position: any }) => {\n        setSelectedPlace({\n            _id,\n            name: placeName,\n            latlng: {\n                x: parseFloat(position.La),\n                y: parseFloat(position.Ma),\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (!mapRef.current) return;\n        map.setRef(mapRef.current!);\n    }, [mapRef]);\n\n    useEffect(() => {\n        if (Object.keys(map).length === 0 || !searchKeyword) return;\n        const ps = new window.kakao.maps.services.Places();\n        const options = {\n            category_group_code: \"FD6\",\n            bounds: map.bounds,\n        };\n        const searchPlace = (data: any, status: any) => {\n            if (status === window.kakao.maps.services.Status.OK) {\n                for (let i = 0; i < data.length; i++) {\n                    const position = new window.kakao.maps.LatLng(data[i].y, data[i].x);\n                    map.displayMarker({\n                        _id: data[i].id,\n                        placeName: data[i].place_name,\n                        position,\n                        handleClickTarget,\n                        isDisplay: i === 0,\n                    });\n                }\n            }\n        };\n\n        map.clear();\n        ps.keywordSearch(searchKeyword, searchPlace, options);\n    }, [map, searchKeyword]);\n\n    return <MapContainer ref={mapRef} />;\n};\n\nexport default PlaceListMap;\n","import styled from \"styled-components\";\nimport { Container as KewordContainer } from \"components/KeywordBox/styled\";\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    height: calc(100% - 110px);\n    flex-direction: column;\n\n    ${KewordContainer} {\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        padding: 8px 8px 0;\n        background: rgba(255, 255, 255, 0.8);\n    }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\nimport { placesQueryState, selectedPlaceState, searchKeywordState, selectedKeywordsState } from \"store/atom\";\nimport { placeListSelector } from \"store/selector\";\nimport { addPlace, deletePlace } from \"api/place\";\nimport { PlaceType } from \"types\";\nimport { MESSAGE } from \"constants/message\";\nimport ListBox from \"components/ListBox\";\nimport PlaceListMap from \"components/PlaceListMap\";\nimport InputButtonBox from \"components/InputButtonBox\";\nimport ButtonBox from \"components/ButtonBox\";\nimport KeywordBox from \"components/KeywordBox\";\nimport SideButton from \"components/SideButton\";\nimport { Container } from \"./styled\";\n\nconst Place = () => {\n    const [isAddMode, setIsAddMode] = useState(false);\n    const [selectedPlace, setSelectedPlace] = useRecoilState(selectedPlaceState);\n    const setSearchKeyword = useSetRecoilState(searchKeywordState);\n    const [selectedKeywords, setSelectedKeywords] = useRecoilState(selectedKeywordsState);\n    const placeList = useRecoilValue(placeListSelector);\n    const setPlaceQuery = useSetRecoilState(placesQueryState);\n\n    const searchButtonHandler = (value: string) => {\n        setSelectedKeywords([]);\n        setSearchKeyword(value);\n    };\n\n    const searchInit = () => {\n        setSelectedPlace({\n            _id: \"\",\n            name: \"\",\n            latlng: {\n                x: 0,\n                y: 0,\n            },\n        });\n        setSelectedKeywords([]);\n        setSearchKeyword(\"\");\n    };\n\n    const addPlaceButtonHandler = async () => {\n        if (!selectedPlace) return alert(MESSAGE.PLACES.ERROR.EMPTY);\n        const { success, err } = await addPlace({ ...selectedPlace, keywords: selectedKeywords });\n        if (!success) {\n            switch (err.code) {\n                case 11000:\n                    alert(MESSAGE.PLACES.ERROR.EXIST);\n                    break;\n            }\n        } else {\n            setPlaceQuery(selectedPlace._id);\n            setIsAddMode(false);\n        }\n    };\n\n    const deletePlaceButtonHandler = async (id: string) => {\n        const { success, err } = await deletePlace(id);\n        if (success) {\n            setPlaceQuery(id);\n        }\n    };\n\n    useEffect(() => {\n        if (!isAddMode) {\n            searchInit();\n        }\n    }, [isAddMode]);\n\n    return (\n        <>\n            {isAddMode ? (\n                <>\n                    <Container>\n                        <InputButtonBox buttonText=\"검색\" handleClickButton={searchButtonHandler} focus={true} />\n                        <PlaceListMap />\n                        {selectedPlace.name && <KeywordBox />}\n                    </Container>\n                    <ButtonBox buttonText=\"밥집 추가\" handleClickButton={addPlaceButtonHandler} />\n                </>\n            ) : (\n                <ListBox list={placeList} handleClickDeleteButton={deletePlaceButtonHandler} />\n            )}\n            <SideButton isAddMode={isAddMode} handleClickButton={() => setIsAddMode(!isAddMode)} />\n        </>\n    );\n};\n\nexport default Place;\n","import styled from \"styled-components\";\nimport \"./animation.css\";\nimport { COLOR } from \"constants/style\";\n\nexport const LoaderWrap = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n`;\n\nexport const RoundWrap = styled.div`\n    position: relative;\n    width: 60px;\n    height: 60px;\n`;\n\nexport const Round = styled.span`\n    -webkit-animation-fill-mode: both;\n    animation-fill-mode: both;\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    border-radius: 100%;\n    background: ${COLOR.ORANGE1};\n\n    &:nth-child(1) {\n        top: 50px;\n        -webkit-animation-name: ball-triangle-path-1;\n        animation-name: ball-triangle-path-1;\n        -webkit-animation-delay: 0;\n        animation-delay: 0;\n        -webkit-animation-duration: 2s;\n        animation-duration: 2s;\n        -webkit-animation-timing-function: ease-in-out;\n        animation-timing-function: ease-in-out;\n        -webkit-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n    }\n    &:nth-child(2) {\n        left: 25px;\n        -webkit-animation-name: ball-triangle-path-2;\n        animation-name: ball-triangle-path-2;\n        -webkit-animation-delay: 0;\n        animation-delay: 0;\n        -webkit-animation-duration: 2s;\n        animation-duration: 2s;\n        -webkit-animation-timing-function: ease-in-out;\n        animation-timing-function: ease-in-out;\n        -webkit-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n    }\n    &:nth-child(3) {\n        top: 50px;\n        left: 50px;\n        -webkit-animation-name: ball-triangle-path-3;\n        animation-name: ball-triangle-path-3;\n        -webkit-animation-delay: 0;\n        animation-delay: 0;\n        -webkit-animation-duration: 2s;\n        animation-duration: 2s;\n        -webkit-animation-timing-function: ease-in-out;\n        animation-timing-function: ease-in-out;\n        -webkit-animation-iteration-count: infinite;\n        animation-iteration-count: infinite;\n    }\n`;\n","import React from \"react\";\nimport { LoaderWrap, RoundWrap, Round } from \"./styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrap>\n            <RoundWrap>\n                <Round />\n                <Round />\n                <Round />\n            </RoundWrap>\n        </LoaderWrap>\n    );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\nimport { COLOR, FONTSIZE } from \"constants/style\";\n\nexport const NoticeWrap = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n`;\n\nexport const Notice = styled.div`\n    width: 100%;\n    font-size: ${FONTSIZE.LARGE};\n    text-align: center;\n    color: ${COLOR.BLACK1};\n    padding: 15px;\n    line-height: 1.4;\n    border: 1px solid ${COLOR.GRAY2};\n    border-radius: 5px;\n    background: ${COLOR.GRAY4};\n`;\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport Header from \"../components/Header\";\nimport Home from \"../pages/Home\";\nimport Member from \"../pages/Member\";\nimport Place from \"../pages/Place\";\nimport Loader from \"../components/Loader\";\nimport { NoticeWrap, Notice } from \"./styled\";\n\nfunction App() {\n    const kakaoMaps = window.kakao;\n\n    return (\n        <RecoilRoot>\n            {kakaoMaps ? (\n                <Router>\n                    <Header />\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Suspense fallback={<Loader />}>\n                                <Home />\n                            </Suspense>\n                        </Route>\n                        <Route path=\"/member\">\n                            <Suspense fallback={<Loader />}>\n                                <Member />\n                            </Suspense>\n                        </Route>\n                        <Route path=\"/place\">\n                            <Suspense fallback={<Loader />}>\n                                <Place />\n                            </Suspense>\n                        </Route>\n                    </Switch>\n                </Router>\n            ) : (\n                <NoticeWrap>\n                    <Notice>\n                        앱 실행 권한이 없습니다.\n                        <br />\n                        관리자에게 문의하세요.\n                    </Notice>\n                </NoticeWrap>\n            )}\n        </RecoilRoot>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}